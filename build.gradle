plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version "${forge_gradle_version}"
    id 'org.spongepowered.mixin' version "${mixin_gradle_version}"
    id 'wtf.gofancy.fancygradle' version "${fancy_gradle_version}"
}

version = mod_version
group = "mod.beethoven92"
archivesBaseName = mod_name

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

minecraft {
    mappings channel: mappings_channel, version: mappings_version

    runs {
        client {
            args "--username=InDev"

            jvmArg "-Dfml.coreMods.load=${mixin_loader_class}"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {

            jvmArg "-Dfml.coreMods.load=${mixin_loader_class}"
            jvmArg "-Dmixin.hotSwap=true"
            jvmArg "-Dmixin.checks.interfaces=true"

            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = 'https://www.cursemaven.com' }
    maven { url = 'https://api.modrinth.com/maven' }
    maven { url = 'https://maven.blamejared.com' }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    implementation "org.spongepowered:mixin:${mixin_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    implementation "io.github.llamalad7:mixinextras-common:${mixin_extras_version}"
    annotationProcessor "io.github.llamalad7:mixinextras-common:${mixin_extras_version}"

    implementation fg.deobf("curse.maven:jei-${jei_version}")
    implementation fg.deobf("CraftTweaker2:CraftTweaker2-${crafttweaker_version}")
    implementation fg.deobf("CraftTweaker2:ZenScript:${zs_version}")
    implementation fg.deobf("CraftTweaker2:CraftTweaker2-API:${zs_version}")
    implementation fg.deobf("curse.maven:mtlib-${mtlib_version}")
    implementation "maven.modrinth:nether-api:${netherapi_version}"
    compileOnly fg.deobf('curse.maven:groovyscript-687577:5789690')
}

mixin {
    add sourceSets.main, "mixins.${mod_id}.refmap.json"
}

fancyGradle {
    patches {
        resources
        coremods
        asm
        mergetool
    }
}

processResources {
    var replaceProperties = [
            'mod_id': mod_id,
            'mod_name': mod_name,
            'mod_version': mod_version,
            'mcversion': minecraft_version,
            'mod_description': mod_description,
            'mod_authors': mod_authors,
            'mod_credits': mod_credits,
            'mod_url': mod_url,
            'mod_logo_path': mod_logo_path
    ]

    inputs.properties replaceProperties

    filesMatching('mcmod.info') {
        expand replaceProperties
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

jar {
    manifest {
        def attr = [:]
        attr['Specification-Title']         = mod_name
        attr['Specification-Vendor']        = mod_authors
        attr['Specification-Version']       = '1'
        attr['Implementation-Title']        = mod_name
        attr['Implementation-Vendor']       = mod_authors
        attr['Implementation-Version']      = mod_version
        attr['Implementation-Timestamp']    = new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        attr['FMLCorePlugin']               = mixin_loader_class
        attr['FMLCorePluginContainsFMLMod'] = 'true'
        attr['TweakClass']                  = 'org.spongepowered.asm.launch.MixinTweaker'

        def currentTasks = gradle.startParameter.taskNames
        if (currentTasks[0] == 'build' || currentTasks[0] == 'assemble')
            attr['ForceLoadAsMod'] = "true"
        attributes(attr)
    }

    archiveClassifier.set('1.12.2-THIN')
}

jar.finalizedBy('reobfJar')